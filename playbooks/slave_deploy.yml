---
- name: Deploy Jenkins slave with docker
  hosts: remote
  become: True
  gather_facts: False
  vars:
    container_recreate: False
  vars_files:
    - ../vars/jenkins_creds.yml

  tasks:
    - name: Gather information about docker container
      block:
        - name: Determine existance of container
          shell: 'docker container list -a  | grep -q slave'
          ignore_errors: True
          register: container_state

        - name: Determine existance of volume     
          shell: 'docker volume list | grep -q slave_data'
          ignore_errors: True
          register: volume_state

        - name: Set fact if container exist to trigger recreate option
          set_fact:
            container_recreate: True
          when: 
            - container_state is succeeded

    - name: Create volume
      docker_volume: 
        name: slave_volume
      when:
        - volume_state is failed

    - name: Copy files
      block:
        - name: Create directory
          file:
            path: /tmp/Slave
            state: directory
            mode: 0755
        - name: Copy files
          copy: src={{ item }} dest=/tmp/Slave
          loop:
            - "../Dockerfile"

    - name: Build image
      docker_image:
        path: /tmp/Slave
        name: slave:latest
        pull: False
        force: True
        buildargs:
          Jenkins_Secret: "{{ Jenkins_Secret }}"
          Jenkins_Node_Name: "{{ Jenkins_Node_Name }}"
          Jenkins_Master_IP: "{{ Jenkins_Master_IP }}"
          Jenkins_Master_Port: "{{ Jenkins_Master_Port }}"
    
    - name: Deploy Container
      docker_container:
        name: Jenkins_slave
        image: slave:latest
        recreate: "{{ container_recreate }}" 
        env:
          Jenkins_Secret: "{{ Jenkins_Secret }}"
          Jenkins_Node_Name: "{{ Jenkins_Node_Name }}"
          Jenkins_Master_IP: "{{ Jenkins_Master_IP }}"
          Jenkins_Master_Port: "{{ Jenkins_Master_Port }}"
        volumes:
          - slave_data:/home/jenkins
...